<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.7.1">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>true</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.6">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@2.5.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/lsst/lsstsw.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>lsstsw</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>false</noTags>
            <reference></reference>
            <depth>0</depth>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.5.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/lsst-sqre/buildbot-scripts.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>buildbot-scripts</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>false</noTags>
            <reference></reference>
            <depth>0</depth>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H/8 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>centos-7</string>
      </values>
    </hudson.matrix.LabelAxis>
    <hudson.matrix.TextAxis>
      <name>dataset</name>
      <values>
        <string>cfht</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>python</name>
      <values>
        <string>py2</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>!(label==&quot;centos-6&quot; &amp;&amp; python==&quot;py3&quot;)</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# allow access to lsstsw from jenkins-slave user
#sudo -iu &quot;build${EXECUTOR_NUMBER}&quot; chmod a+rx /home/build${EXECUTOR_NUMBER}

ARCHIVE=&quot;${WORKSPACE}/archive&quot;
DRP=&quot;${WORKSPACE}/validate_drp&quot;

# leave validate_drp results in workspace for debugging purproses but always start with a clean dir
rm -rf &quot;$ARCHIVE&quot; &quot;$DRP&quot;
mkdir -p &quot;$ARCHIVE&quot; &quot;$DRP&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>./buildbot-scripts/jenkins_wrapper.sh</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

ARCHIVE=&quot;${WORKSPACE}/archive&quot;
DRP=&quot;${WORKSPACE}/validate_drp&quot;
LSSTSW=${LSSTSW:-${WORKSPACE}/lsstsw}
LSSTSW_BUILD_DIR=${LSSTSW_BUILD_DIR:-${LSSTSW}/build}

cd &quot;$DRP&quot;

. &quot;${LSSTSW}/bin/setup.sh&quot;

eval &quot;$(grep -E &apos;^BUILD=&apos; &quot;$LSSTSW_BUILD_DIR&quot;/manifest.txt)&quot;

#DEPS=(pipe_tasks obs_cfht validation_data_cfht validate_drp)
#DEPS=(pipe_tasks obs_decam validation_data_decam validate_drp)
DEPS=(validate_drp)

for p in &quot;${DEPS[@]}&quot;; do
    setup &quot;$p&quot; -t &quot;$BUILD&quot;
done

#mkdir -p ~/.config/matplotlib
#echo &quot;backend: agg&quot; &gt; ~/.config/matplotlib/matplotlibrc

case &quot;$dataset&quot; in
  cfht)
    RUN=&quot;$VALIDATE_DRP_DIR/examples/runCfhtTest.sh&quot;
    OUTPUT=&quot;${DRP}/Cfht_output_r.json&quot;
    ;;
  decam)
    RUN=&quot;$VALIDATE_DRP_DIR/examples/runDecamTest.sh&quot;
    OUTPUT=&quot;${DRP}/Decam_output_z.json&quot;
    ;;
  *)
    &gt;&amp;2 echo &quot;Unknown DATASET: $dataset&quot;
    exit 1
    ;;
esac

#rm -f ~/.config/matplotlib/matplotlibrc
&quot;$RUN&quot; --noplot
cp &quot;$OUTPUT&quot; &quot;$ARCHIVE&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

ARCHIVE=&quot;${WORKSPACE}/archive&quot;
DRP=&quot;${WORKSPACE}/validate_drp&quot;
POST=&quot;${WORKSPACE}/post-qa&quot;
LSSTSW=${LSSTSW:-${WORKSPACE}/lsstsw}
LSSTSW_BUILD_DIR=${LSSTSW_BUILD_DIR:-${LSSTSW}/build}

case &quot;$dataset&quot; in
  cfht)
    OUTPUT=&quot;${DRP}/Cfht_output_r.json&quot;
    ;;
  decam)
    OUTPUT=&quot;${DRP}/Decam_output_z.json&quot;
    ;;
  *)
    &gt;&amp;2 echo &quot;Unknown DATASET: $dataset&quot;
    exit 1
    ;;
esac

mkdir -p &quot;$POST&quot;
cd &quot;$POST&quot;

virtualenv venv
. venv/bin/activate
pip install post-qa==1.0.0

post-qa --lsstsw &quot;$LSSTSW&quot; --qa-json &quot;$OUTPUT&quot; --api-url &quot;$SQUASH_URL/jobs/&quot;  --api-user &quot;$SQUASH_USER&quot; --api-password &quot;$SQUASH_PASS&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>archive/**/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>Z=$(lsof -d 200 -t)
if [[ ! -z $Z ]]; then
  kill -9 $Z
fi

rm -rf &quot;${WORKDIR}/lsstsw/stack/.lockDir&quot;
</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>true</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
      <executeOn>AXES</executeOn>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <jenkins.plugins.hipchat.HipChatNotifier plugin="hipchat@1.0.0">
      <token></token>
      <room></room>
      <matrixTriggerMode>BOTH</matrixTriggerMode>
      <startJobMessage></startJobMessage>
      <completeJobMessage></completeJobMessage>
    </jenkins.plugins.hipchat.HipChatNotifier>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>gnome-terminal</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <EnvInjectBuildWrapper plugin="envinject@1.92.1">
      <info>
        <propertiesContent>BRANCH=master
PRODUCT=validate_drp
SKIP_DEMO=true
SKIP_DOCS=true
NO_FETCH=false</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.5"/>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.8">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>squash-api-user</credentialsId>
          <usernameVariable>SQUASH_USER</usernameVariable>
          <passwordVariable>SQUASH_PASS</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>squash-api-url</credentialsId>
          <variable>SQUASH_URL</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>